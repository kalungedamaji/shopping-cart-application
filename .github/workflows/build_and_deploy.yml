## This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
## For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven
#
#name: CICD
#on:
#  push:
#    branches: [ master ]
#
#jobs:
#  testAndBuild:
#    name: Test And Build
#    runs-on: macos-12
#    steps:
#      - uses: actions/checkout@v2
#      - name: Set up JDK 11
#        uses: actions/setup-java@v2
#        with:
#          java-version: '8'
#          distribution: 'adopt'
#          cache: maven
#      - name: Build with Maven
#        run: mvn -B package --file pom.xml
#

# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: CICD
on:
  push:
    branches: [ ci/cd ]

jobs:
  testAndBuild:
    name: Test And Build
    runs-on: macos-12
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 8
        uses: actions/setup-java@v2
        with:
          java-version: '8'
          distribution: 'adopt'
          cache: maven
      - name: Build with Maven
        run: mvn -B package --file pom.xml
      - name: Temporarily save jar artifact
        uses: actions/upload-artifact@v2
        with:
          name: jar-artifact
          path: ${{ github.workspace }}/target/*.jar
          retention-days: 1
      - name: Print Version
        run: "echo 'New Version: ${{steps.bump.outputs.version}}'"
    outputs:
      jar_name: ci-0.0.1-release.jar
#  postgres-job:
#    runs-on: macos-12
#    services:
#      postgres:
#        image: postgres
#        env:
#          POSTGRES_DB: main
#          POSTGRES_PORT: 5432
#        options: >-
#          --health-cmd pg_isready
#          --health-interval 10s
#          --health-timeout 5s
#          --health-retries 5
#        ports:
#          - 5432:5432
#    steps:
#      - name: Install PostgreSQL Client
#        run: |
#          apt-get update
#          apt-get install --yes postgresql-client
#      - name: Query database
#        run: psql -h postgres -d postgres_db -U postgres_user -c 'SELECT 1;'